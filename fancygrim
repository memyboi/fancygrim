#/bin/bash

# fancygrim for hyprland (nvidia)
# features:
#  - read README.md on git repo (https://github.com/memyboi/fancygrim)
#  - im too lazy to rewrite them here ;-;















# RUNTIME
SHADOW=false
CORNER=10
NOTIF=true
PRENOTIF=true
COPY=true
ONEPASTE=false
NOTIFIMAGE=true




#   ____ ___  ____  _____
#  / ___/ _ \|  _ \| ____|
# | |  | | | | | | |  _|
# | |__| |_| | |_| | |___
#  \____\___/|____/|_____|
# DO NOT MODIFY THE FOLLOWING UNLESS YOU KNOW WHAT YOU'RE DOING
usage() {
  echo "Usage:"
  echo "  fancygrim (area|window|full) [--corner (N) | -c (N)] [--shadow | -s] [--silence | -d] [--pasteonce | -o] [--nocopy | -n] [--noimage -i]"
  echo "  fancygrim usage"
  echo ""
  echo "  area:"
  echo "    takes a photo and crops to user's input."
  echo "  window:"
  echo "    takes a photo and crops it to the active window."
  echo "  full:"
  echo "    takes a photo of the whole screen."
  echo "  config:"
  echo "    opens config in your set editor or nano."
}

addshadow() {
  convert /tmp/fancygrimss.png \( +clone -background black -shadow 50x10+15+15 \) +swap -background none -layers merge +repage /tmp/fancygrimss.png
}

addcorners() {
  convert -size $1x$2 xc:none -draw "roundrectangle 0,0,$1,$2,$3,$3" /tmp/fancygrimmask.png
  convert /tmp/fancygrimss.png -matte /tmp/fancygrimmask.png \
    -compose DstIn -composite /tmp/fancygrimss.png
}

copytoclipboard() {
  if [ $COPY = true ]; then
    ONCE=""
    if [ $ONEPASTE = true ]; then
      ONCE="-o"
    fi
    wl-copy $ONCE < /tmp/fancygrimss.png
  fi
}

sendnotif() {
  if [ $NOTIF = true ]; then
    IMAGE=""
    CLIPBOARD="screenshot saved to /tmp/fancygrimss.png."
    if [ $NOTIFIMAGE = true ]; then
      IMAGE='-i /tmp/fancygrimss.png'
    fi
    if [ $COPY = true ]; then
      CLIPBOARD='screenshot copied to clipboard.'
    fi
    notify-send -t 2000 "Screenshot taken" "$1 $CLIPBOARD" $IMAGE
  fi
}

area() {
  grim "/tmp/fancygrimss.png"
  hyprpicker -z -r &
  sleep 0.2
  hyprpicker_pid=$!
  RAWRES=$(slurp)
  IFS=' ' read -ra SPLITRAWRES <<< "$RAWRES"
  IFS=',' read -ra RAWPOS <<< "${SPLITRAWRES[0]}"
  IFS='x' read -ra RAWSIZE <<< "${SPLITRAWRES[1]}"
  RES=${RAWSIZE[0]}x${RAWSIZE[1]}+${RAWPOS[0]}+${RAWPOS[1]}
  kill "$hyprpicker_pid"
  prenotif
  convert /tmp/fancygrimss.png -crop $RES /tmp/fancygrimss.png
  if [ $CORNER -gt 0 ]; then 
    addcorners "${RAWSIZE[0]}" "${RAWSIZE[1]}" "$CORNER"
  fi
  if [ $SHADOW = true ]; then
    addshadow
  fi
  copytoclipboard
  sendnotif "Area"
}

window() { # touch up later, is a little slow.
  RAWRES=$(hyprctl activewindow -j | jq -r '"\(.at[0]),\(.at[1]) \(.size[0])x\(.size[1])"')
  grim "/tmp/fancygrimss.png"
  prenotif
  IFS=' ' read -ra SPLITRAWRES <<< "$RAWRES"
  IFS=',' read -ra RAWPOS <<< "${SPLITRAWRES[0]}"
  IFS='x' read -ra RAWSIZE <<< "${SPLITRAWRES[1]}"
  POSX=${RAWPOS[0]}
  POSY=${RAWPOS[1]}
  SIZX=${RAWSIZE[0]}
  SIZY=${RAWSIZE[1]}
  RES=${SIZX}x${SIZY}+${POSX}+${POSY}

  convert /tmp/fancygrimss.png -crop $RES /tmp/fancygrimss.png
  if [ $CORNER -gt 0 ]; then
    addcorners "${SIZX}" "${SIZY}" "$CORNER"
  fi
  if [ $SHADOW = true ]; then
    addshadow
  fi
  copytoclipboard
  sendnotif "Window"
}

full() {
  grim "/tmp/fancygrimss.png"
  prenotif
  if [ $CORNER -gt 0 ]; then
    SIZE=$(convert /tmp/fancygrimss.png -print "%w %h" /dev/null)
    WIDTH=$(echo $SIZE | cut -d ' ' -f 1)
    HEIGHT=$(echo $SIZE | cut -d ' ' -f 2)
    addcorners "$WIDTH" "$HEIGHT" "$CORNER"
  fi
  if [ $SHADOW = true ]; then
    addshadow
  fi
  copytoclipboard
  sendnotif "Full"
}

prenotif() {
  if [ $NOTIF = true ]; then
    notify-send -t 2000 "Taking screenshot..." "Please wait.. (You can do other things while you wait.)"
    # just cuz processing takes a while
  fi
}

MODE=$1

while [ $# -gt 0 ]; do
  key="$2"
  case $key in
    -d | --silence)
      NOTIF=false
      PRENOTIF=false
      NOTIFIMAGE=false
      shift
      ;;

    -o | --pasteonce)
      ONEPASTE=true
      shift
      ;;
    
    -s | --shadow)
      SHADOW=true
      shift
      ;;

    -i | --noimage)
      NOTIFIMAGE=false
      shift
      ;;

    -c | --corner)
      shift
      if [ $# -gt 0 ]; then
        CORNER="$2"
        shift
      else
        echo "Error: Missing argument for $1 option."
        exit 1
      fi
      ;;
    -n | --nocopy)
      COPY=false
      shift
      ;;

    *)
      break
      ;;

  esac
done

# Args handler
if [ "$MODE" = "area" ]; then
  area
elif [ "$MODE" = "window" ]; then
  window
elif [ "$MODE" = "full" ]; then
  full
elif [ "$MODE" = "usage" ]; then
  usage
else
  echo "No action supplied."
  usage
fi
