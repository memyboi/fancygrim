#/bin/bash

# fancygrim for hyprland (nvidia)
# features:
#  - read README.md on git repo (https://github.com/memyboi/fancygrim)

#  ____ ___  _   _ _____ ___ ____
# / ___/ _ \| \ | |  ___|_ _/ ___|
#| |  | | | |  \| | |_   | | |  _
#| |__| |_| | |\  |  _|  | | |_| |
# \____\___/|_| \_|_|   |___\____|
AREA_SHADOW=true # toggle shadow for "area" screenshots
AREA_CORNER_INTENSITY=15 # border radius for "area" screenshots, 0 for disable
WINDOW_SHADOW=true # toggle shadow for "window" screenshots
WINDOW_CORNER_INTENSITY=15 # border radius for "window" screenshots, 0 for disable
FULL_SHADOW=false # toggle shadow for "full" screenshots
FULL_CORNER_INTENSITY=0 # border radius for "full" screenshots, 0 for disable
SEND_NOTIF=true # toggle notification, useful for people without a notification daemon.
SEND_PRE_NOTIF=true # toggle waiting notification.
NOTIF_IMAGE=true # toggle image in notification
COPY_TO_CLIPBOARD=true # toggle whether /tmp/fancygrimss.png should be saved to the clipboard.
PASTE_ONCE=false # toggle whether paste once or not









#   ____ ___  ____  _____
#  / ___/ _ \|  _ \| ____|
# | |  | | | | | | |  _|
# | |__| |_| | |_| | |___
#  \____\___/|____/|_____|
# DO NOT MODIFY THE FOLLOWING UNLESS YOU KNOW WHAT YOU'RE DOING
usage() {
  echo "Usage:"
  echo "  fancygrim (area|window|full|config)"
  echo "  fancygrim usage"
  echo ""
  echo "  area:"
  echo "    takes a photo and crops to user's input."
  echo "  window:"
  echo "    takes a photo and crops it to the active window."
  echo "  full:"
  echo "    takes a photo of the whole screen."
  echo "  config:"
  echo "    opens config in your set editor or nano."
}

addshadow() {
  convert /tmp/fancygrimss.png \( +clone -background black -shadow 50x10+15+15 \) +swap -background none -layers merge +repage /tmp/fancygrimss.png
}

addcorners() {
  convert -size $1x$2 xc:none -draw "roundrectangle 0,0,$1,$2,$3,$3" /tmp/fancygrimmask.png
  convert /tmp/fancygrimss.png -matte /tmp/fancygrimmask.png \
    -compose DstIn -composite /tmp/fancygrimss.png
}

copytoclipboard() {
  if [ $COPY_TO_CLIPBOARD = true ]; then
    ONCE=""
    if [ $PASTE_ONCE = true ]; then
      ONCE="-o"
    fi
    wl-copy $ONCE < /tmp/fancygrimss.png
  fi
}

sendnotif() {
  if [ $SEND_NOTIF = true ]; then
    IMAGE=""
    CLIPBOARD="screenshot saved to /tmp/fancygrimss.png."
    if [ $NOTIF_IMAGE = true ]; then
      IMAGE='-i /tmp/fancygrimss.png'
    fi
    if [ $COPY_TO_CLIPBOARD = true ]; then
      CLIPBOARD='screenshot copied to clipboard.'
    fi
    notify-send -t 2000 "Screenshot taken" "$1 $CLIPBOARD" $IMAGE
  fi
}

area() {
  grim "/tmp/fancygrimss.png"
  hyprpicker -z -r &
  sleep 0.2
  hyprpicker_pid=$!
  RAWRES=$(slurp)
  IFS=' ' read -ra SPLITRAWRES <<< "$RAWRES"
  IFS=',' read -ra RAWPOS <<< "${SPLITRAWRES[0]}"
  IFS='x' read -ra RAWSIZE <<< "${SPLITRAWRES[1]}"
  RES=${RAWSIZE[0]}x${RAWSIZE[1]}+${RAWPOS[0]}+${RAWPOS[1]}
  kill "$hyprpicker_pid"
  prenotif
  convert /tmp/fancygrimss.png -crop $RES /tmp/fancygrimss.png
  if [ $AREA_CORNER_INTENSITY -gt 0 ]; then 
    addcorners "${RAWSIZE[0]}" "${RAWSIZE[1]}" "$AREA_CORNER_INTENSITY"
  fi
  if [ $AREA_SHADOW = true ]; then
    addshadow
  fi
  copytoclipboard
  sendnotif "Area"
}

window() { # touch up later, is a little slow.
  RAWRES=$(hyprctl activewindow -j | jq -r '"\(.at[0]),\(.at[1]) \(.size[0])x\(.size[1])"')
  grim "/tmp/fancygrimss.png"
  prenotif
  IFS=' ' read -ra SPLITRAWRES <<< "$RAWRES"
  IFS=',' read -ra RAWPOS <<< "${SPLITRAWRES[0]}"
  IFS='x' read -ra RAWSIZE <<< "${SPLITRAWRES[1]}"
  RES=${RAWSIZE[0]}x${RAWSIZE[1]}+${RAWPOS[0]}+${RAWPOS[1]}

  convert /tmp/fancygrimss.png -crop $RES /tmp/fancygrimss.png
  if [ $WINDOW_CORNER_INTENSITY -gt 0 ]; then
    addcorners "${RAWSIZE[0]}" "${RAWSIZE[1]}" "$WINDOW_CORNER_INTENSITY"
  fi
  if [ $WINDOW_SHADOW = true ]; then
    addshadow
  fi
  copytoclipboard
  sendnotif "Window"
}

full() {
  grim "/tmp/fancygrimss.png"
  prenotif
  if [ $FULL_CORNER_INTENSITY -gt 0 ]; then
    SIZE=$(convert /tmp/fancygrimss.png -print "%w %h" /dev/null)
    WIDTH=$(echo $SIZE | cut -d ' ' -f 1)
    HEIGHT=$(echo $SIZE | cut -d ' ' -f 2)
    addcorners "$WIDTH" "$HEIGHT" "$FULL_CORNER_INTENSITY"
  fi
  if [ $FULL_SHADOW = true ]; then
    addshadow
  fi
  copytoclipboard
  sendnotif "Full"
}

prenotif() {
  if [ $SEND_PRE_NOTIF = true ]; then
    notify-send -t 2000 "Taking screenshot..." "Please wait.. (You can do other things while you wait.)"
    # just cuz processing takes a while
  fi
}

config() {
  nano $0 # Opens arg 0 (file) in nano
  # any sensible shell should recognise $0 as "/usr/bin/fancygrim" and not "fancygrim"
}

# Args handler
MODE=$1
if [ "$MODE" = "area" ]; then
  area
elif [ "$MODE" = "window" ]; then
  window
elif [ "$MODE" = "full" ]; then
  full
elif [ "$MODE" = "usage" ]; then
  usage
elif [ "$MODE" = "config" ]; then
  config
else
  echo "No action supplied."
  usage
fi
